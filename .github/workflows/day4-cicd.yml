#Create Pipeline with name
name: Rajkumar App containerization Pipeline
#Trigger section -- When this pipelin should start 
on:
  push:
    branches:
    - "dev"

#jobs - what jobs need to perform

jobs:
  rajkumar-image-build:
    runs-on: ubuntu-latest
    #This server will be provison by github backend for this job
    steps:
    - name: run some basic commands on above server to do some verification
      run: "uname -r \nwhoami\ncat /etc/os-release\ndocker version\ndocker-compose version\n"
    - name: using pre-defined github workflow to get copy github repo code to runners
      uses: actions/checkout@v4

    - name: Offical Sonarqube scan update
      uses: SonarSource/sonarqube-scan-action@v2.1.0
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=rajk-project 
          -Dsonar.exclusions=ecr/**,Dockerfile,compose.yml,*.html
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Docker python app build
      run: |
        ls -al
        cd python-app-secret
        docker-compose up -d
        sleep 2
        docker-compose ps
        sleep 1
        docker-compose logs
    - name: Build an image from Dockerfile
      run: |
          cd python-app-secret
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rajkpython:v1${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
          image-ref: 'rajkpython:v1'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

    - name: try to login from runner to docker hub account 
      uses: docker/login-action@v3 
      with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
    - name: pushing image to docker hub 
      run: |
            echo "please wait while image is getting pushed"
            docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rajkpython:v1${{ github.sha }}

    - name: using uplodad
      uses: actions/upload-artifacts@v4
      with:
         name: rajk-artifact
         path: |
          ./rajk-ecs

     rajk-cdk-build:
     runs-on: ubuntu-latest
     needs: rajkumar-image-build
     steps:

        - name: Installing node 20
          uses: actions/setup-node@v2
          with:
           node-version: '20'
    
        - name: install NPM modules for ecs
          run: |
           node -v
           cd rajk-ecs
           npm install
    
        - name: setup aws login details
          uses: aws-actions/configure-aws-credentials@v4
          with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

        - name: CDK deploy ecs code
          run: |
           cd rajk-ecs
           npx cdk bootstrap
           npx cdk deploy --no-rollback --require-approval never
    
        - name: CDK destroy
          run: |
           cd rajk-ecs
           npx cdk destroy --force